# nginx configuration for Excel Add-in
# This configuration acts as a reverse proxy for both frontend and backend
# Place this file in nginx/conf.d/ directory

# Upstream configuration for backend API
upstream excel_addin_backend {
    server 127.0.0.1:5000;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

# Main server block for HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    # Update with your actual domain name
    server_name your-staging-domain.com;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/excel-addin.crt;
    ssl_certificate_key /etc/ssl/private/excel-addin.key;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CORS Headers for Office.js (required for Excel add-in)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    add_header Access-Control-Max-Age 86400 always;
    
    # Handle preflight requests
    location ~ ^/api/ {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # Rate limiting for API endpoints
        limit_req zone=api burst=20 nodelay;
        
        # Proxy to backend
        proxy_pass http://excel_addin_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Serve static Excel add-in files
    location / {
        # Rate limiting for static files
        limit_req zone=static burst=100 nodelay;
        
        # Document root for the Excel add-in frontend
        root C:/inetpub/wwwroot/ExcelAddin/dist;
        index taskpane.html;
        
        # Try files in order, fallback to taskpane.html for SPA routing
        try_files $uri $uri/ /taskpane.html;
        
        # Cache control for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Gzip compression
            gzip on;
            gzip_vary on;
            gzip_min_length 1000;
            gzip_types text/plain text/css text/javascript application/javascript application/json image/svg+xml;
        }
        
        # Special handling for manifest files (required by Excel)
        location ~* \.(xml)$ {
            add_header Content-Type "application/xml";
            expires 1h;
        }
        
        # JSON files (functions.json for Excel custom functions)
        location ~* \.(json)$ {
            add_header Content-Type "application/json";
            expires 1h;
        }
        
        # HTML files
        location ~* \.(html)$ {
            add_header Content-Type "text/html";
            expires 1h;
        }
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
    }
    
    # Robots.txt (prevent search engine indexing for staging)
    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain;
    }
    
    # Logging
    access_log C:/Logs/nginx/excel_addin_access.log combined;
    error_log C:/Logs/nginx/excel_addin_error.log warn;
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
        root C:/inetpub/wwwroot/ExcelAddin/dist;
    }
    
    location = /50x.html {
        internal;
        root C:/inetpub/wwwroot/ExcelAddin/dist;
    }
}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name your-staging-domain.com;
    
    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
    
    # Allow Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}